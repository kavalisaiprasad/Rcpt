{"ast":null,"code":"import _regeneratorRuntime from\"/home/saiprasad/rcptlive/rcpt/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/saiprasad/rcptlive/rcpt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/saiprasad/rcptlive/rcpt/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Headermobile from'./Headermobile';import Footer from'./Footer';import{baseurl}from'../Component/Baseurl';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var tabMappings={'Populer Vouchers':{voucherKey:'populervouchers',type:'populervouchers'},'General Topup':{voucherKey:'generaltopup',type:'generaltopup'},'Data Vouchers':{voucherKey:'vouchers',type:'DATA'},'Voice Vouchers':{voucherKey:'vouchers',type:'VOICE'},'SMS Vouchers':{voucherKey:'vouchers',type:'SMS'},'ISD Vouchers':{voucherKey:'vouchers',type:'ISD'},'Others Vouchers':{voucherKey:'vouchers',type:'OTHER'},'Plan Extension':{voucherKey:'vouchers',type:'EXTENSON'},'Plan Migration':{voucherKey:'vouchers',type:'MIGRATION'}};function Plans(){var _useState=useState('Populer Vouchers'),_useState2=_slicedToArray(_useState,2),activeTab=_useState2[0],setActiveTab=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tableData=_useState4[0],setTableData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),circleNames=_useState8[0],setCircleNames=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),selectedState=_useState10[0],setSelectedState=_useState10[1];// State selected by the user\nvar _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),selectedCircleCode=_useState12[0],setSelectedCircleCode=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),duplicateNames=_useState14[0],setDuplicateNames=_useState14[1];var handleTabClick=function handleTabClick(tabLabel){setActiveTab(tabLabel);var _tabMappings$tabLabel=tabMappings[tabLabel],voucherKey=_tabMappings$tabLabel.voucherKey,type=_tabMappings$tabLabel.type;fetchData(voucherKey,type,selectedCircleCode);};useEffect(function(){fetchCircleName();},[]);var fetchCircleName=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var location,circleNamesUrl,headers,requestBody;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if('geolocation'in navigator){navigator.geolocation.getCurrentPosition(function(position){var userLatitude=position.coords.latitude;var userLongitude=position.coords.longitude;// Implement your logic to map coordinates to a state and set the user's current state\nvar userState=determineUserLocation(userLatitude,userLongitude);console.log(\"Geo locatooooo:: \"+userState);if(userState){console.log(\"Geo location \"+userState);location=userState;console.log(\"Geo location11 \"+location);setSelectedState(userState);console.log(\"shghghh:: \"+selectedState);var circleCode=getCircleCodeForState(userState);setSelectedCircleCode(circleCode);console.log(\"circle code ramu:: \"+circleCode);}// Set the default selected state based on the user's current state\nsetSelectedState(userState);});}// Define the API endpoint for fetching circle names\ncircleNamesUrl=\"\".concat(baseurl,\"/rcpt-api/getcircle\");// const allcircledata=null;\nheaders=new Headers({'Content-Type':'application/json'});requestBody={};fetch(circleNamesUrl,{method:'POST',headers:headers,body:requestBody}).then(function(response){return response.json();}).then(function(data){setCircleNames(data);console.log(\"Geo location12 \"+location);var selectedCircle=data.find(function(circle){return circle.circle_name===location;});console.log(\"selectedCircle at url: \"+JSON.stringify(selectedCircle));setSelectedCircleCode(selectedCircle.circle_code);if(data&&Array.isArray(data)){var names=data.map(function(item){return item.circle_name;});//console.log(data)\n//  setCircleNames(data); // Store the entire response, including circle_code\nconsole.log(\"state name:: \"+selectedState);// setCircleName1(data); // Store the entire response, including circle_code\n//allcircledata=data;\n//console.log(\"all cicle amain:: \" + JSON.stringify(data))\n}}).catch(function(error){console.error('Error fetching circle names:',error);});case 5:case\"end\":return _context.stop();}},_callee);}));return function fetchCircleName(){return _ref.apply(this,arguments);};}();useEffect(function(){console.log(\"All circles for ts:: \"+JSON.stringify(circleNames));},[]);// Implement your own logic to determine the user's location based on coordinates\nfunction determineUserLocation(latitude,longitude){// Replace this with your own logic to map coordinates to a state\n// This is a simplified example with a few states for demonstration\nvar stateCoordinates={'Andaman and Nicobar Islands':{latitude:11.7401,longitude:92.6586},'Andhra Pradesh':{latitude:15.9129,longitude:79.7400},'Arunachal Pradesh':{latitude:27.1004,longitude:93.6165},'Assam':{latitude:26.2006,longitude:92.9376},'Bihar':{latitude:25.0961,longitude:85.3131},'Chandigarh':{latitude:30.7333,longitude:76.7794},'Chhattisgarh':{latitude:21.2787,longitude:81.8661},'Dadra and Nagar Haveli and Daman and Diu':{latitude:20.1809,longitude:73.0169},'Delhi':{latitude:28.6139,longitude:77.2090},'Goa':{latitude:15.2993,longitude:74.1240},'Gujarat':{latitude:22.2587,longitude:71.1924},'Haryana':{latitude:29.0588,longitude:76.0856},'Himachal Pradesh':{latitude:31.1048,longitude:77.1734},'Jammu and Kashmir':{latitude:33.7782,longitude:76.5762},'Jharkhand':{latitude:23.6102,longitude:85.2799},'Karnataka':{latitude:12.9716,longitude:77.5946},'Kerala':{latitude:10.8505,longitude:76.2711},'Ladakh':{latitude:34.1526,longitude:77.5771},'Lakshadweep':{latitude:10.5667,longitude:72.6420},'Madhya Pradesh':{latitude:22.9734,longitude:78.6569},'Maharashtra':{latitude:19.7515,longitude:75.7139},'Manipur':{latitude:24.6637,longitude:93.9063},'Meghalaya':{latitude:25.4670,longitude:91.3662},'Mizoram':{latitude:23.1645,longitude:92.9376},'Nagaland':{latitude:26.1584,longitude:94.5624},'Odisha':{latitude:20.9517,longitude:85.0985},'Puducherry':{latitude:11.9416,longitude:79.8083},'Punjab':{latitude:31.1471,longitude:75.3412},'Rajasthan':{latitude:27.0238,longitude:74.2179},'Sikkim':{latitude:27.5330,longitude:88.5122},'Tamil Nadu':{latitude:13.0827,longitude:80.2707},'Telangana':{latitude:17.3850,longitude:78.4867},'Tripura':{latitude:23.9408,longitude:91.9882},'Uttar Pradesh':{latitude:26.8467,longitude:80.9462},'Uttarakhand':{latitude:30.0668,longitude:79.0193},'West Bengal':{latitude:22.5726,longitude:88.3639}// Add coordinates for other states as well\n};var userState=Object.keys(stateCoordinates).find(function(state){return isInsideRegion({latitude:latitude,longitude:longitude},stateCoordinates[state],1.5// Set a radius as needed\n);});setSelectedState(userState);return userState||'Default State';}useEffect(function(){console.log(\"userState:: \"+selectedState);},[]);function isInsideRegion(point,center,radius){var distance=Math.sqrt(Math.pow(point.latitude-center.latitude,2)+Math.pow(point.longitude-center.longitude,2));return distance<=radius;}useEffect(function(){var circleCode=getCircleCodeForState(selectedState);setSelectedCircleCode(circleCode);},[]);useEffect(function(){fetchData(selectedCircleCode,tabMappings[activeTab].voucherKey,tabMappings[activeTab].type);},[]);var getCircleCodeForState=function getCircleCodeForState(state){var selectedCircle=circleNames.find(function(circle){return circle.circle_name===state;});return selectedCircle?selectedCircle.circle_code:'';};useEffect(function(){// ...\nif(selectedState){var circleCode=getCircleCodeForState(selectedState);setSelectedCircleCode(circleCode);}},[selectedState]);useEffect(function(){if(selectedCircleCode&&activeTab){fetchData(selectedCircleCode,tabMappings[activeTab].voucherKey,tabMappings[activeTab].type);}},[selectedCircleCode,activeTab]);// ...\nuseEffect(function(){// Check if circleNames is available and not empty\nif(circleNames&&circleNames.length>0){// When the component loads, fetch data based on default state or user's location\nif(selectedCircleCode&&activeTab){fetchData(selectedCircleCode,tabMappings[activeTab].voucherKey,tabMappings[activeTab].type);}}},[circleNames,selectedCircleCode,activeTab]);var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(circleCode,voucherKey,type){var headers,requestBody,apiUrl,response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setLoading(true);headers=new Headers({'Content-Type':'application/json'});requestBody={};console.log('circleCode:'+circleCode,'voucherKey:'+voucherKey,'type: '+type);apiUrl=\"\".concat(baseurl,\"/rcpt-api/getplans?circlecode=\").concat(circleCode,\"&voucherkey=\").concat(voucherKey,\"&type=\").concat(type);console.log('API Call:',apiUrl);// Log the API call for debugging\n_context2.next=9;return fetch(apiUrl,{method:'POST',headers:headers,body:JSON.stringify(requestBody)});case 9:response=_context2.sent;if(!(response.status===200)){_context2.next=17;break;}_context2.next=13;return response.json();case 13:data=_context2.sent;setTableData(data);_context2.next=18;break;case 17:console.error('Error fetching data. Status:',response.status);case 18:_context2.next=23;break;case 20:_context2.prev=20;_context2.t0=_context2[\"catch\"](0);console.error('Error fetching data:',_context2.t0);case 23:_context2.prev=23;setLoading(false);return _context2.finish(23);case 26:case\"end\":return _context2.stop();}},_callee2,null,[[0,20,23,26]]);}));return function fetchData(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();var tableColumns=['Amount','Validity','Description',''];if(activeTab==='General Topup'){// Change column names and data field names for the 'General Vouchers' tab\ntableColumns=['Plan Name','Talktime','Description','Price'];}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Headermobile,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row marginforprow\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"plansform\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"state\",className:\"col-2\",children:\"Choose a Region:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"state\",className:\"col-7 ssopt\",value:selectedState,onChange:function onChange(e){return setSelectedState(e.target.value);},children:circleNames.map(function(circle,index){return/*#__PURE__*/_jsx(\"option\",{value:circle.circle_name,children:circle.circle_name},index);})}),/*#__PURE__*/_jsx(\"button\",{className:\"col-2 submitbutton\",onClick:function onClick(){var circleCode=getCircleCodeForState(selectedState);setSelectedCircleCode(circleCode);},children:\"Submit\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"plans-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"tab-content\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Loading...\"})}):/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:tableColumns.map(function(column,index){return/*#__PURE__*/_jsx(\"th\",{children:column},index);})})}),/*#__PURE__*/_jsx(\"tbody\",{children:tableData.map(function(item,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.denomination}),/*#__PURE__*/_jsxs(\"td\",{children:[activeTab==='General Topup'?item.talk_value:item.validity,\" \"]}),/*#__PURE__*/_jsx(\"td\",{children:item.description||item.remarks}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:\"https://portal2.bsnl.in/myportal/quickrecharge.do\",children:/*#__PURE__*/_jsx(\"button\",{className:\"denominbtns btn\",children:\"Buy\"})})})]},index);})})]})})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Footer,{})})]});}export default Plans;","map":{"version":3,"names":["React","useState","useEffect","Headermobile","Footer","baseurl","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","tabMappings","voucherKey","type","Plans","_useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","tableData","setTableData","_useState5","_useState6","loading","setLoading","_useState7","_useState8","circleNames","setCircleNames","_useState9","_useState10","selectedState","setSelectedState","_useState11","_useState12","selectedCircleCode","setSelectedCircleCode","_useState13","_useState14","duplicateNames","setDuplicateNames","handleTabClick","tabLabel","_tabMappings$tabLabel","fetchData","fetchCircleName","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","location","circleNamesUrl","headers","requestBody","wrap","_callee$","_context","prev","next","navigator","geolocation","getCurrentPosition","position","userLatitude","coords","latitude","userLongitude","longitude","userState","determineUserLocation","console","log","circleCode","getCircleCodeForState","concat","Headers","fetch","method","body","then","response","json","data","selectedCircle","find","circle","circle_name","JSON","stringify","circle_code","Array","isArray","names","map","item","catch","error","stop","apply","arguments","stateCoordinates","Object","keys","state","isInsideRegion","point","center","radius","distance","Math","sqrt","pow","length","_ref2","_callee2","apiUrl","_callee2$","_context2","sent","status","t0","finish","_x","_x2","_x3","tableColumns","children","className","htmlFor","id","value","onChange","e","target","index","onClick","role","column","denomination","talk_value","validity","description","remarks","to"],"sources":["/home/saiprasad/rcptlive/rcpt/src/Mobile/Plans.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Headermobile from './Headermobile';\nimport Footer from './Footer';\nimport { baseurl } from '../Component/Baseurl';\nimport { Link } from 'react-router-dom';\n\nconst tabMappings = {\n  'Populer Vouchers': { voucherKey: 'populervouchers', type: 'populervouchers' },\n  'General Topup': { voucherKey: 'generaltopup', type: 'generaltopup' },\n  'Data Vouchers': { voucherKey: 'vouchers', type: 'DATA' },\n  'Voice Vouchers': { voucherKey: 'vouchers', type: 'VOICE' },\n  'SMS Vouchers': { voucherKey: 'vouchers', type: 'SMS' },\n  'ISD Vouchers': { voucherKey: 'vouchers', type: 'ISD' },\n  'Others Vouchers': { voucherKey: 'vouchers', type: 'OTHER' },\n  'Plan Extension': { voucherKey: 'vouchers', type: 'EXTENSON' },\n  'Plan Migration': { voucherKey: 'vouchers', type: 'MIGRATION' },\n};\n\nfunction Plans() {\n  const [activeTab, setActiveTab] = useState('Populer Vouchers');\n  const [tableData, setTableData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [circleNames, setCircleNames] = useState([]);\n  const [selectedState, setSelectedState] = useState(''); // State selected by the user\n  const [selectedCircleCode, setSelectedCircleCode] = useState('');\n  const [duplicateNames, setDuplicateNames] = useState([]);\n\n\n  const handleTabClick = (tabLabel) => {\n    setActiveTab(tabLabel);\n    const { voucherKey, type } = tabMappings[tabLabel];\n    fetchData(voucherKey, type, selectedCircleCode);\n  };\n\n\n\n\n\n\n\n  useEffect(() => {\n    fetchCircleName();\n  }, []);\n\n  const fetchCircleName = async () => {\n    let location;\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userLatitude = position.coords.latitude;\n        const userLongitude = position.coords.longitude;\n\n        // Implement your logic to map coordinates to a state and set the user's current state\n        const userState = determineUserLocation(userLatitude, userLongitude);\n        console.log(\"Geo locatooooo:: \" + userState);\n        if (userState) {\n          console.log(\"Geo location \" + userState);\n          location = userState;\n          console.log(\"Geo location11 \" + location);\n\n          setSelectedState(userState);\n          console.log(\"shghghh:: \" + selectedState)\n          const circleCode = getCircleCodeForState(userState);\n          setSelectedCircleCode(circleCode);\n          console.log(\"circle code ramu:: \" + circleCode)\n        }\n        // Set the default selected state based on the user's current state\n        setSelectedState(userState);\n      });\n    }\n\n    // Define the API endpoint for fetching circle names\n    const circleNamesUrl = `${baseurl}/rcpt-api/getcircle`;\n    // const allcircledata=null;\n\n    const headers = new Headers({\n      'Content-Type': 'application/json',\n    });\n\n    const requestBody = {};\n\n    fetch(circleNamesUrl, {\n      method: 'POST',\n      headers: headers,\n      body: requestBody\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setCircleNames(data);\n        console.log(\"Geo location12 \" + location);\n\n        const selectedCircle = data.find((circle) => circle.circle_name === location);\n        console.log(\"selectedCircle at url: \" + JSON.stringify(selectedCircle));\n        setSelectedCircleCode(selectedCircle.circle_code)\n        if (data && Array.isArray(data)) {\n          const names = data.map((item) => item.circle_name);\n          //console.log(data)\n\n\n          //  setCircleNames(data); // Store the entire response, including circle_code\n          console.log(\"state name:: \" + selectedState);\n          // setCircleName1(data); // Store the entire response, including circle_code\n\n          //allcircledata=data;\n          //console.log(\"all cicle amain:: \" + JSON.stringify(data))\n\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching circle names:', error);\n      });\n\n\n  }\n\n  useEffect(() => {\n    console.log(\"All circles for ts:: \" + JSON.stringify(circleNames))\n\n  }, [])\n\n\n\n\n  // Implement your own logic to determine the user's location based on coordinates\n  function determineUserLocation(latitude, longitude) {\n    // Replace this with your own logic to map coordinates to a state\n    // This is a simplified example with a few states for demonstration\n    const stateCoordinates = {\n      'Andaman and Nicobar Islands': { latitude: 11.7401, longitude: 92.6586 },\n      'Andhra Pradesh': { latitude: 15.9129, longitude: 79.7400 },\n      'Arunachal Pradesh': { latitude: 27.1004, longitude: 93.6165 },\n      'Assam': { latitude: 26.2006, longitude: 92.9376 },\n      'Bihar': { latitude: 25.0961, longitude: 85.3131 },\n      'Chandigarh': { latitude: 30.7333, longitude: 76.7794 },\n      'Chhattisgarh': { latitude: 21.2787, longitude: 81.8661 },\n      'Dadra and Nagar Haveli and Daman and Diu': { latitude: 20.1809, longitude: 73.0169 },\n      'Delhi': { latitude: 28.6139, longitude: 77.2090 },\n      'Goa': { latitude: 15.2993, longitude: 74.1240 },\n      'Gujarat': { latitude: 22.2587, longitude: 71.1924 },\n      'Haryana': { latitude: 29.0588, longitude: 76.0856 },\n      'Himachal Pradesh': { latitude: 31.1048, longitude: 77.1734 },\n      'Jammu and Kashmir': { latitude: 33.7782, longitude: 76.5762 },\n      'Jharkhand': { latitude: 23.6102, longitude: 85.2799 },\n      'Karnataka': { latitude: 12.9716, longitude: 77.5946 },\n      'Kerala': { latitude: 10.8505, longitude: 76.2711 },\n      'Ladakh': { latitude: 34.1526, longitude: 77.5771 },\n      'Lakshadweep': { latitude: 10.5667, longitude: 72.6420 },\n      'Madhya Pradesh': { latitude: 22.9734, longitude: 78.6569 },\n      'Maharashtra': { latitude: 19.7515, longitude: 75.7139 },\n      'Manipur': { latitude: 24.6637, longitude: 93.9063 },\n      'Meghalaya': { latitude: 25.4670, longitude: 91.3662 },\n      'Mizoram': { latitude: 23.1645, longitude: 92.9376 },\n      'Nagaland': { latitude: 26.1584, longitude: 94.5624 },\n      'Odisha': { latitude: 20.9517, longitude: 85.0985 },\n      'Puducherry': { latitude: 11.9416, longitude: 79.8083 },\n      'Punjab': { latitude: 31.1471, longitude: 75.3412 },\n      'Rajasthan': { latitude: 27.0238, longitude: 74.2179 },\n      'Sikkim': { latitude: 27.5330, longitude: 88.5122 },\n      'Tamil Nadu': { latitude: 13.0827, longitude: 80.2707 },\n      'Telangana': { latitude: 17.3850, longitude: 78.4867 },\n      'Tripura': { latitude: 23.9408, longitude: 91.9882 },\n      'Uttar Pradesh': { latitude: 26.8467, longitude: 80.9462 },\n      'Uttarakhand': { latitude: 30.0668, longitude: 79.0193 },\n      'West Bengal': { latitude: 22.5726, longitude: 88.3639 },\n      // Add coordinates for other states as well\n    };\n\n    const userState = Object.keys(stateCoordinates).find((state) =>\n      isInsideRegion(\n        { latitude, longitude },\n        stateCoordinates[state],\n        1.5 // Set a radius as needed\n      )\n    );\n    setSelectedState(userState);\n\n    return userState || 'Default State';\n  }\n\n  useEffect(() => {\n    console.log(\"userState:: \" + selectedState)\n\n  }, [])\n\n\n  function isInsideRegion(point, center, radius) {\n    const distance = Math.sqrt(\n      Math.pow(point.latitude - center.latitude, 2) +\n      Math.pow(point.longitude - center.longitude, 2)\n    );\n    return distance <= radius;\n  }\n\n\n\n  useEffect(() => {\n\n    const circleCode = getCircleCodeForState(selectedState);\n    setSelectedCircleCode(circleCode);\n\n  }, []);\n\n  useEffect(() => {\n\n    fetchData(selectedCircleCode, tabMappings[activeTab].voucherKey, tabMappings[activeTab].type);\n\n  }, [])\n\n  const getCircleCodeForState = (state) => {\n\n    const selectedCircle = circleNames.find((circle) => circle.circle_name === state);\n\n    return selectedCircle ? selectedCircle.circle_code : '';\n  };\n\n\n\n\n  useEffect(() => {\n    // ...\n\n    if (selectedState) {\n      const circleCode = getCircleCodeForState(selectedState);\n      setSelectedCircleCode(circleCode);\n    }\n  }, [selectedState]);\n\n  useEffect(() => {\n    if (selectedCircleCode && activeTab) {\n      fetchData(selectedCircleCode, tabMappings[activeTab].voucherKey, tabMappings[activeTab].type);\n    }\n  }, [selectedCircleCode, activeTab]);\n\n  // ...\n\n  useEffect(() => {\n    // Check if circleNames is available and not empty\n    if (circleNames && circleNames.length > 0) {\n      // When the component loads, fetch data based on default state or user's location\n      if (selectedCircleCode && activeTab) {\n        fetchData(selectedCircleCode, tabMappings[activeTab].voucherKey, tabMappings[activeTab].type);\n      }\n    }\n  }, [circleNames, selectedCircleCode, activeTab]);\n\n  const fetchData = async (circleCode, voucherKey, type) => {\n    try {\n      setLoading(true);\n      const headers = new Headers({\n        'Content-Type': 'application/json',\n      });\n      const requestBody = {};\n      console.log('circleCode:' + circleCode, 'voucherKey:' + voucherKey, 'type: ' + type);\n\n      const apiUrl = `${baseurl}/rcpt-api/getplans?circlecode=${circleCode}&voucherkey=${voucherKey}&type=${type}`;\n\n      console.log('API Call:', apiUrl); // Log the API call for debugging\n\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(requestBody),\n      });\n      if (response.status === 200) {\n        const data = await response.json();\n        setTableData(data);\n      } else {\n        console.error('Error fetching data. Status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  let tableColumns = ['Amount', 'Validity', 'Description', ''];\n\n  if (activeTab === 'General Topup') {\n    // Change column names and data field names for the 'General Vouchers' tab\n    tableColumns = ['Plan Name', 'Talktime', 'Description', 'Price'];\n  }\n\n  return (\n    <>\n      <Headermobile />\n      <div className='container'>\n        <div className='row marginforprow'>\n          <form className='plansform'>\n            <label htmlFor=\"state\" className='col-2'>\n              Choose a Region:\n            </label>\n            <select\n              id=\"state\"\n              className=\"col-7 ssopt\"\n              value={selectedState}\n              onChange={(e) => setSelectedState(e.target.value)}\n            >\n\n              {circleNames.map((circle, index) => (\n                <option key={index} value={circle.circle_name}>\n                  {circle.circle_name}\n                </option>\n              ))}\n            </select>\n            <button\n              className=\"col-2 submitbutton\"\n              onClick={() => {\n                const circleCode = getCircleCodeForState(selectedState);\n                setSelectedCircleCode(circleCode);\n              }}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n        <div className=\"plans-container\">\n          {/* <div className=\"vertical-tabs\">\n            {Object.keys(tabMappings).map((tabLabel) => (\n              <div\n                key={tabLabel}\n                className={`tab ${activeTab === tabLabel ? 'active' : ''}`}\n                onClick={() => handleTabClick(tabLabel)}\n              >\n                {tabLabel}\n              </div>\n            ))}\n          </div> */}\n\n          <div className=\"tab-content\">\n            {loading ? (\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            ) : (\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    {tableColumns.map((column, index) => (\n                      <th key={index}>{column}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {tableData.map((item, index) => (\n                    <tr key={index}>\n                      <td>{item.denomination}</td>\n                      <td>{activeTab === 'General Topup' ? item.talk_value : item.validity} </td>\n                      <td>{item.description || item.remarks}</td>\n                      <td>\n                        <Link to=\"https://portal2.bsnl.in/myportal/quickrecharge.do\">\n                          <button className=\"denominbtns btn\">Buy</button>\n                        </Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default Plans;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}